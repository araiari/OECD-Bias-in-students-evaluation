library(rjags)
library(coda)
# for plots
library(ggplot2)
library(MASS)
library(tidyr)
library(dplyr)
library(purrr)
library(ggsci)
library(plot.matrix)
require(gplots)
require(ggpubr)
set.seed(49)
dati=read.csv('data_hierarchical_WAIC.csv', header=T)
N = dim(dati)[1]
Y=as.vector(dati[,4]) #controllare quale colonna è la risposta
g = as.factor(dati[,3])
M=length(levels(g))
levels(g)=c(1:M)
g=as.numeric(g)
XX=as.matrix(dati[,c(24:30)])#covariate scuola
X=matrix(0,dim(XX)[1], dim(XX)[2])
for (i in 1:dim(XX)[1]){
for(j in 1:dim(XX)[2]){
X[i,j]=as.numeric(XX[i,j])
}
}
ZZ=as.matrix(dati[,c(5:23)])
Z=matrix(0,dim(ZZ)[1], dim(ZZ)[2])
p = dim(X)[2]
v = dim(Z)[2]
data_JAGS_EN <-list(N = N,
p = p,
v = v,
M = M,
Y = Y,
g = as.vector(g),
X = as.matrix(X),
Z = as.matrix(Z))
inits = function() {
list(#theta0 = 0.0,
theta = rep(0,p),
gamma0 = rep(0,M),
gamma = matrix(0,M,v),
a1 = 10,
a2 = 20,
prec = 0.1,
prec_gamma=rep(0.1, v),
tau = rep(2, p), #a normal exp(0.1), a big exp(0.01), a small exp(10)
.RNG.seed = 321, .RNG.name = 'base::Wichmann-Hill')
}
model = jags.model("elastic_net_hierarchical_ari_plus_no_inter_unif.bug",
data = data_JAGS_EN,
n.adapt = 60000,
inits = inits,
n.chains = 1)
nit <- 80000
thin <-10
#param <- c("theta0", "theta", "gamma",'a1','a2')
#param <- c("theta0", "theta",'a1','a2')
#param <- c("theta0", "theta",'a1','a2','a')
#param <- c("theta0", "theta",'a1','a2','prec_gamma')
param <- c( "theta",'a1','a2','prec_gamma')
#param <- c( "theta",'a1','a2','prec_gamma','gamma')
output <- coda.samples(model = model,
variable.names = param,
n.iter = nit,
thin = thin)
save.image(file='risultato_completo_unif.Rdata')
x11()
plot(output,ask=T)
dev.off()
quantili=as.matrix(summary(output)$quantiles)
CI_beta=quantili[22:28,c(1,5)]
idx_cov_BEN = NULL
nomi=colnames(XX)
for(l in 1:p){
if(CI_beta[l,1]<0 && CI_beta[l,2]>0)
{
cat("*** variable ", nomi[l], " excluded \n")
}
else
{
cat("*** variable ", nomi[l], " included \n")
idx_cov_BEN = c(idx_cov_BEN, l)
}
}
x11()
plot(output,ask=T)
CI_beta=quantili[22:28,c(1,5)]
CI_beta
load("C:/Users/1996_/OneDrive/Desktop/Università/Bayesian statistics/progetto/PISA2015/PISA2015/hierarchical/completo/risultato_completo_0.001.Rdata")
quantili=as.matrix(summary(output)$quantiles)
CI_beta=quantili[22:28,c(1,5)]
CI_beta
load("C:/Users/1996_/OneDrive/Desktop/Università/Bayesian statistics/progetto/PISA2015/PISA2015/hierarchical/completo/risultato_completo_norm.Rdata")
quantili=as.matrix(summary(output)$quantiles)
CI_beta=quantili[22:28,c(1,5)]
CI_beta
